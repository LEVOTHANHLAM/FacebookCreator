<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAahJREFUWEftl8tKw0AUhvtSiQuri6QLRcHqSkRfwl3BhdIKrhQXgoIi7lz4Apa4
        0K1uvSA+gYqL5kKsMcc5SUbSYSYXZwIW8sO3mtM5H4ee0mnUqaMqA0Ofsk1t2za0I2WQ+watiWbSolgi
        CVMPHVMH1eC9hF7SKjvxRKoRoeD92CdpKQ5OhXeBerS9pKU4xPqU/2G1YJ+kpThjI+OtLcHXxTk4M5Pc
        8zT+zhY4s03uGSIl460uQvj8AvD2AYFlZQoNjw/juptrcOemuTVSMv5mB+D1PWoSC/W5QsOzk98aJJoQ
        U4NIySB+d4MRGp0QnQgFxdKfTyMtg4iEyoggSmQQVii8fywlgiiTQVihMiKIUhkk6F+OiIQPT4XWHlEq
        w35HKHlrT1Emw4oEV1bmlvFQIiPamry1Z5GWyVvfMkJSMp8H+5kiFFZIVCcl4y7Pk22Jf0/y1pcKfd/d
        gttucWukZBBvpR1NiHfG4nfWwV0wuGeItIxKxlHmH/0HxncNsa7+dVD0/USKe1UJ4b22oXeTVsWC7xoc
        Jfdl+EccQ9st/aKsU0eYRuMH7tskCamCBmUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6W//D+vZKD+ibt8EAAAAAElFTkSuQmCC
</value>
  </data>
</root>